"use strict";(self.webpackChunkreact_native_screenguard_docs=self.webpackChunkreact_native_screenguard_docs||[]).push([[841],{138:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var r=t(4848),s=t(8453);const a={sidebar_position:6},i="registerScreenShotEventListener",c={id:"usages-and-apis/register-screenshot-event-listener",title:"registerScreenShotEventListener",description:"Activate a screenshot detector and receive an event callback with screenshot information (if allowed) after a screenshot has been triggered successfully.",source:"@site/docs/usages-and-apis/register-screenshot-event-listener.md",sourceDirName:"usages-and-apis",slug:"/usages-and-apis/register-screenshot-event-listener",permalink:"/react-native-screenguard/docs/usages-and-apis/register-screenshot-event-listener",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"registerWithoutEffect (Android only)",permalink:"/react-native-screenguard/docs/usages-and-apis/register-without-effect-android"},next:{title:"registerScreenRecordingEventListener",permalink:"/react-native-screenguard/docs/usages-and-apis/register-screen-recording-event-listener"}},o={},d=[{value:"Usage",id:"usage",level:3},{value:"Example code",id:"example-code",level:3}];function l(e){const n={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"registerscreenshoteventlistener",children:(0,r.jsx)(n.code,{children:"registerScreenShotEventListener"})}),"\n",(0,r.jsx)(n.p,{children:"Activate a screenshot detector and receive an event callback with screenshot information (if allowed) after a screenshot has been triggered successfully."}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ScreenGuardModule.registerScreenshotEventListener(true, (data) => {})\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"true"}),", callback will return a data object containing info of the previous image screenshot."]}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"false"}),", callback will return null."]}),"\n",(0,r.jsx)(n.h3,{id:"example-code",children:"Example code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import ScreenGuardModule from 'react-native-screenguard';\n\nScreenGuardModule.registerScreenshotEventListener(\n  true,\n\t(data) => {\n    if (data != null) {\n      console.log('path: ', data.path);\n      console.log('name: ', data.name);\n      console.log('type: ', data.type);\n    }\n    ....other code\n});\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(6540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);