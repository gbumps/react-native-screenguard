"use strict";(self.webpackChunkreact_native_screenguard_docs=self.webpackChunkreact_native_screenguard_docs||[]).push([[411],{3836:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var s=r(4848),t=r(8453);const c={sidebar_position:7},i="unregister",a={id:"usages-and-apis/unregister",title:"unregister",description:"Deactivate all the screenshot protection and callback handlers.",source:"@site/docs/usages-and-apis/unregister.md",sourceDirName:"usages-and-apis",slug:"/usages-and-apis/unregister",permalink:"/react-native-screenguard/docs/usages-and-apis/unregister",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"registerScreenRecordingEventListener",permalink:"/react-native-screenguard/docs/usages-and-apis/register-screen-recording-event-listener"},next:{title:"removeScreenshotEventListener",permalink:"/react-native-screenguard/docs/usages-and-apis/remove-screenshot-event-listener"}},o={},d=[{value:"Example code",id:"example-code",level:2},{value:"New architecture (v1.0.8+)",id:"new-architecture-v108",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"unregister",children:(0,s.jsx)(n.code,{children:"unregister"})}),"\n",(0,s.jsx)(n.p,{children:"Deactivate all the screenshot protection and callback handlers."}),"\n",(0,s.jsx)(n.h2,{id:"example-code",children:"Example code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"ScreenGuardModule.unregister();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"new-architecture-v108",children:"New architecture (v1.0.8+)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Starting from ",(0,s.jsx)(n.code,{children:"v1.0.8+"}),", except ",(0,s.jsx)(n.code,{children:"registerScreenshotEventListener"})," and ",(0,s.jsx)(n.code,{children:"registerScreenRecordingEventListener"}),", all APIs have been upgraded to Promise. So you must use it asynchronously in your project."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"ScreenGuardModule.unregister().then((_) => {console.log()})\n"})}),"\n",(0,s.jsx)(n.p,{children:"or"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await ScreenGuardModule.unregister();\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"unregister"})," will not remove screenshot EventListener and screenRecord EventListener. You must do it your own by using ",(0,s.jsx)(n.a,{href:"/react-native-screenguard/docs/usages-and-apis/remove-screenshot-event-listener",children:"removeScreenshotEventListener"})," and ",(0,s.jsx)(n.a,{href:"/react-native-screenguard/docs/usages-and-apis/remove-screen-record-event-listener",children:"removeRecordingEventListener"}),"."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var s=r(6540);const t={},c=s.createContext(t);function i(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);